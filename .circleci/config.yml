version: 2.1
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
jobs:
  build:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - restore_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "Makefile" }}-{{ checksum "requirements.txt" }}
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make dev
      - save_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "Makefile" }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            make test
      - run:
          name: generate code coverage data
          command: |
            . venv/bin/activate
            make coverage-codecov
      - run:
          name: upload code coverage data
          # This approach relies on transport security only and feels pretty
          # insecure. That said, it is the recommended approach per codecov's
          # docs. This approach uses the $CODECOV_TOKEN env variable.
          # https://docs.codecov.io/docs/about-the-codecov-bash-uploader
          command: |
            . venv/bin/activate
            bash <(curl -s https://codecov.io/bash)

